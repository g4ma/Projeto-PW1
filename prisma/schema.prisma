// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model User {
  id          String @id @default(uuid()) @db.VarChar(36)
  name        String @db.VarChar(80)
  email       String @unique @db.VarChar(256)
  phoneNumber String @db.VarChar(16)
  password    String @db.VarChar(255)

  Owner       Owner?
  Reservation Reservation[]
}

model Owner {
  userId String @id @db.VarChar(36)
  pixKey String @db.VarChar(32)

  user         User           @relation(fields: [userId], references: [id])
  ParkingSpace ParkingSpace[]
}

model ParkingSpace {
  id            String           @id @default(uuid()) @db.VarChar(36)
  latitude      Float
  longitude     Float
  pricePerHour  Float
  disponibility Boolean          @default(false)
  description   String           @db.VarChar(50)
  type          ParkingSpaceType

  ownerId String @db.VarChar(36)
  owner   Owner  @relation(fields: [ownerId], references: [userId])

  reservation Reservation[]
  picture     Picture[]
}

model Reservation {
  id             String                   @id @default(uuid()) @db.VarChar(36)
  userId         String                   @db.VarChar(36)
  parkingSpaceId String                   @db.VarChar(36)
  startTime      String
  endTime        String
  date           String
  paymentStatus  ReservationPaymentStatus @default(Pendente)

  parkingSpace ParkingSpace @relation(fields: [parkingSpaceId], references: [id])
  user         User         @relation(fields: [userId], references: [id])
}

model Picture {
  id             String @id @default(uuid()) @db.VarChar(36)
  parkingSpaceId String
  path           String

  parkingSpace ParkingSpace @relation(fields: [parkingSpaceId], references: [id])
}

enum ParkingSpaceType {
  Moto
  Carro
}

enum ReservationPaymentStatus {
  Cancelado
  Aprovado
  Pendente
}
